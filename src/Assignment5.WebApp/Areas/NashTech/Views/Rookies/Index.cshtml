@using Assignment5.Domain.Enums
@model IEnumerable<Assignment5.Domain.Entities.Person>


@{
    ViewData["Title"] = "List Person";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

<h1>List Person</h1>
<h2>Total Person : @ViewBag.TotalPerson</h2>
<p>
    <form asp-action="Index" method="get">
        <input type="text" name="nameFilter" value="@ViewBag.NameFilter" placeholder="Filter by name..." />
        <input type="submit" value="Filter" />
    </form>
</p>


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-stripe">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthPlace)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsGraduated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>

            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthPlace)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsGraduated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>

                <td>
                    <a class="btn btn-primary" asp-area="NashTech" asp-controller="Rookies" asp-action="Edit" asp-route-id="@item.Id" >Edit</a>
                    <a class="btn btn-warning" asp-area="NashTech" asp-controller="Rookies" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-danger delete-link" asp-area="NashTech" asp-controller="Rookies" asp-action="Delete" asp-route-id="@item.Id" data-id="@item.Id">Delete</a>


                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var pagingModel = new Assignment5.WebApp.Helpers.PagingModel
            {
                Currentpage = ViewBag.CurrentPage,
                Countpages = ViewBag.CountPages,
                GenerateUrl = (int? page) => Url.Action("Index", new { p = page, nameFilter = ViewBag.NameFilter })
            };

}
@Html.Partial("_Paging", pagingModel)
@section Scripts {
    <script>
        $(document).ready(function () {
            $('.delete-link').click(function (e) {
                e.preventDefault();
                var id = $(this).data('id');

                
                if (confirm('Are you sure you want to delete ?')) {
                    $.ajax({
                        url: '/NashTech/Rookies/Delete/' + id,
                        type: 'DELETE',
                        success: function (result) {
                            location.reload();
                        }
                    });
                }
            });
        });
    </script>
}


